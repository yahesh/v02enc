#!/usr/bin/env bash

# set a default for the key file if none is given
if [[ -z "${V02ENC_KEY}" ]]
then
  V02ENC_KEY=~/.v02enc
fi

SCRIPT_DIR=$(dirname $(realpath "$0"))

# handle parameters
HG_ROOT="${1}"
FILE1="${2}"
FILE2="${3}"

# prepare the output
COMPARED="0"
EXITCODE="0"
OUTPUT=()
TEMPFILE1="${FILE1}"
TEMPFILE2="${FILE2}"

if [[ -f "${V02ENC_KEY}" ]]
then
  if [[ -f "${FILE1}" || -f "${FILE2}" ]]
  then
    # check if we are comparing v02enc encrypted files
    if [[ "${FILE1: -7}" == ".v02enc" || "${FILE2: -7}" == ".v02enc" ]]
    then
      # generate the temporary file names
      TEMPFILE1=$(/usr/bin/env mktemp)
      TEMPFILE2=$(/usr/bin/env mktemp)

      # prepare exit codes
      EXITCODE1="0"
      EXITCODE2="0"

      if [[ -f "${FILE1}" ]]
      then
        # decrypt the first file
        "${SCRIPT_DIR}/v02enc" --decrypt --key "${V02ENC_KEY}" --input "${FILE1}" --output "${TEMPFILE1}" 2>/dev/null

        # store exit code
        EXITCODE1="$?"

        if [[ "${EXITCODE1}" -eq "0" ]]
        then
          # set restrictive temporary file access
          chmod 600 "${TEMPFILE1}"
        fi
      fi

      if [[ -f "${FILE2}" ]]
      then
        # decrypt the second file
        "${SCRIPT_DIR}/v02enc" --decrypt --key "${V02ENC_KEY}" --input "${FILE2}" --output "${TEMPFILE2}" 2>/dev/null

        # store exit code
        EXITCODE2="$?"

        if [[ "${EXITCODE2}" -eq "0" ]]
        then
          # set restrictive temporary file access
          chmod 600 "${TEMPFILE2}"
        fi
      fi

      # check that both files could be decrypted
      if [[ "${EXITCODE1}" -eq "0" && "${EXITCODE2}" -eq "0" ]]
      then
        # prevent normal file diff
        COMPARED="1"

        # compare decrypted files
        IFS=$'\n' OUTPUT=($(/usr/bin/env diff --color=never -Npu "${TEMPFILE1}" "${TEMPFILE2}"))

        # store exit code
        EXITCODE="$?"
      fi

      if [[ -f "${FILE1}" ]]
      then
        # try to delete the temporary file either way
        rm -f "${TEMPFILE1}"
      fi

      if [[ -f "${FILE2}" ]]
      then
        # try to delete the temporary file either way
        rm -f "${TEMPFILE2}"
      fi
    fi
  fi
fi

# handle as normal files
if [[ "${COMPARED}" -eq "0" ]]
then
  # reset temporary file names
  TEMPFILE1="${FILE1}"
  TEMPFILE2="${FILE2}"

  # just to be sure
  COMPARED="1"

  # compare decrypted files
  IFS=$'\n' OUTPUT=($(/usr/bin/env diff --color=never -Npu "${TEMPFILE1}" "${TEMPFILE2}"))

  # store exit code
  EXITCODE="$?"
fi

# only handle output if there was no error
if [[ "${#OUTPUT[@]}" -gt "0" ]]
then
  # prepare clean filename
  FILENAME="${FILE2}"
  FILENAME="${FILENAME#"$HG_ROOT"}"
  FILENAME="${FILENAME#"/"}"

  # check for the known exit code
  if [[ "${EXITCODE}" -eq "1" ]]
  then
    # check if the output is a diff
    if [[ "${OUTPUT[0]:0:3}" == "---" ]]
    then
      # prepare first output line
      if [[ "${FILE1}" == "/dev/null" ]]
      then
        OUTPUT[0]="--- /dev/null"
      else
        OUTPUT[0]="--- a/${FILENAME}"
      fi

      # prepare second output line
      if [[ "${FILE2}" == "/dev/null" || ! -f "${FILE2}" ]]
      then
        OUTPUT[1]="+++ /dev/null"
      else
        OUTPUT[1]="+++ b/${FILENAME}"
      fi

      printf '%s\n' "${OUTPUT[@]}" | colordiff
    else
      # prepare placeholders
      PLACEHOLDER1=""
      PLACEHOLDER2=""

      if [[ "${FILE1}" == "/dev/null" ]]
      then
        PLACEHOLDER1="/dev/null"
      else
        PLACEHOLDER1="a/${FILENAME}"
      fi 

      if [[ "${FILE2}" == "/dev/null" || ! -f "${FILE2}" ]]
      then
        PLACEHOLDER2="/dev/null"
      else
        PLACEHOLDER2="b/${FILENAME}"
      fi

      echo -e "Binary files ${PLACEHOLDER1} and ${PLACEHOLDER2} differ\n" | colordiff
    fi
  else
    # just output the text
    printf '%s\n' "${OUTPUT[@]}"
  fi
fi
